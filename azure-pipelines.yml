name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
- master
- release/*
- develop
- feature/*
  
  
variables:
  - group: Artifactory
  - name: projectName
    value: DeleteMe
  - name: channel
    value: Experimental

pool:
  vmImage: 'Ubuntu-18.04'

stages:
  - stage: Build
    jobs:

    - job: build
      timeoutInMinutes: '10'
      displayName: Build
      steps:

      - bash: pip list
        displayName: Get pip list

      # - bash: |
      #       mkdir -p $(build.artifactstagingdirectory)/.conan/profiles/
      #       touch $(build.artifactstagingdirectory)/.conan/profiles/default
      #       echo empty default: $(build.artifactstagingdirectory)/.conan/profiles/default
      #   displayName: Conan fake config


      - task: ArtifactoryConan@1
        displayName: 'Conan Config Install'
        inputs:
          conanCommand: 'Config Install'
          configZipPath: conan.conf
          conanUserHome: '$(build.artifactstagingdirectory)'
          workingDirectory: '$(build.sourcesdirectory)'
          collectBuildInfo: false

      - task: ArtifactoryConan@1
        displayName: 'Build DSP'
        inputs:
          conanCommand: Create
          createPath: .
          createReference: $(projectName)/$(channel)
          #extraArguments: '-some-option'
          conanUserHome: '$(build.artifactstagingdirectory)'
          workingDirectory: '$(build.sourcesdirectory)'
          collectBuildInfo: false
      
      - bash: |
          echo "artifact_property_build.test=/text" >> ~/.conan/artifacts.properties
        workingDirectory:  '$(build.artifactstagingdirectory)'
        displayName: create artifacts.properties

      - task: ArtifactoryConan@1
        displayName: 'Conan Add Remote'
        inputs:
          conanCommand: 'Add Remote'
          remoteName: frogtester@9
          artifactoryService: bandi-conan-vignesh
          conanRepo: conan.local
          purgeExistingRemotes: true
          conanUserHome: '$(build.artifactstagingdirectory)'
          workingDirectory: '$(build.sourcesdirectory)'
          collectBuildInfo: false

      - task: ArtifactoryConan@1
        displayName: 'Conan Upload'
        inputs:
          conanCommand: Upload
          patternOrReference: '*@$(projectName)/$(channel)'
          extraArguments: '--all'
          conanUserHome: '$(build.artifactstagingdirectory)'
          workingDirectory: '$(build.sourcesdirectory)'
          collectBuildInfo: false
